{"version":3,"sources":["logo.svg","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","account1","setaccount","Contract1","setContract1","useWeb3React","active","account","library","connector","activate","deactivate","methodaAdd","methodviewAddress","setmethodviewAddress","address1","setaddress","classname","setclassname","resultDiv","phone","setphone","useEffect","loadWeb3","loadBlockchainData","web3","accounts","Contract","ABI","inputs","stateMutability","type","internalType","name","outputs","a","window","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","console","log","net","getId","networkId","setcatchFlag","setErrormessage","onSubmit","e","preventDefault","methods","Add_Phone","send","from","then","receipt","ss","flag1","setflag1","ViewPhone","call","method1","flag3","setflag3","ViewMethodPhone","setViewMethodPhone","ViewAddress","View_Address","method2","close","setaddphone","menu1","className","class","onClick","menu2","onChange","event","target","value","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cd830bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n// import './app.css'\r\nimport \"./fresh.css\";\r\nimport \"./button.css\";\r\nimport \"./closebutton.css\";\r\nimport \"./search.css\";\r\nimport \"./header.css\";\r\nimport \"./popup.css\";\r\nexport const Home = () => {\r\n  const [account1, setaccount] = useState(\"\");\r\n  const [Contract1, setContract1] = useState(\"\");\r\n  const [phoneNumber, setphoneNumber] = useState(\"\");\r\n  const { active, account, library, connector, activate, deactivate } =\r\n    useWeb3React();\r\n  const [methodaAdd, setmethodaAdd] = useState(\"\");\r\n  const [methodviewAddress, setmethodviewAddress] = useState(\"\");\r\n  const [address1, setaddress] = useState(\"\");\r\n  const [classname, setclassname] = useState(\"formdiv\");\r\n  const [resultDiv, setresultDiv] = useState(\"resultDiv\");\r\nconst [name, setname] = useState('')\r\n  const [phone, setphone] = useState(0);\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  const ABI = [\r\n    {\r\n      inputs: [],\r\n      stateMutability: \"nonpayable\",\r\n      type: \"constructor\",\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: \"uint256\",\r\n          name: \"_phone\",\r\n          type: \"uint256\",\r\n        },\r\n      ],\r\n      name: \"Add_Phone\",\r\n      outputs: [\r\n        {\r\n          internalType: \"uint256\",\r\n          name: \"__phone\",\r\n          type: \"uint256\",\r\n        },\r\n        {\r\n          internalType: \"address\",\r\n          name: \"_address\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      stateMutability: \"nonpayable\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: \"address\",\r\n          name: \"_address\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      name: \"ViewPhone\",\r\n      outputs: [\r\n        {\r\n          internalType: \"uint256\",\r\n          name: \"_phone\",\r\n          type: \"uint256\",\r\n        },\r\n      ],\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: \"uint256\",\r\n          name: \"_phone\",\r\n          type: \"uint256\",\r\n        },\r\n      ],\r\n      name: \"View_Address\",\r\n      outputs: [\r\n        {\r\n          internalType: \"address\",\r\n          name: \"_address\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: \"address\",\r\n          name: \"\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      name: \"phone\",\r\n      outputs: [\r\n        {\r\n          internalType: \"uint256\",\r\n          name: \"\",\r\n          type: \"uint256\",\r\n        },\r\n      ],\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: \"uint256\",\r\n          name: \"\",\r\n          type: \"uint256\",\r\n        },\r\n      ],\r\n      name: \"phoneAddress\",\r\n      outputs: [\r\n        {\r\n          internalType: \"address\",\r\n          name: \"\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n  ];\r\n  const loadWeb3 = async () => {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  var web3;\r\n  var accounts;\r\n  var Contract;\r\n  const loadBlockchainData = async () => {\r\n    web3 = window.web3;\r\n    accounts = await web3.eth.getAccounts();\r\n    setaccount(accounts[0]);\r\n    // this.setState({ account: accounts[0] })\r\n    // console.log(account1);\r\n    console.log(accounts[0]);\r\n    const networkId = await web3.eth.net.getId();\r\n    console.log(networkId);\r\n    // this.setState({ loading: false })\r\n    Contract = new web3.eth.Contract(\r\n      ABI,\r\n      \"0x549d720f606a4af30531eb75d8f98665fc167924\"\r\n    );\r\n    setContract1(Contract);\r\n    console.log(\"contract\", Contract);\r\n  };\r\n  const [catchFlag, setcatchFlag] = useState(false);\r\n  const [Errormessage, setErrormessage] = useState(\"\");\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let ss = await Contract1.methods\r\n        .Add_Phone(phone)\r\n        .send({ from: `${account1}` })\r\n        .then(function (receipt) {\r\n          console.log(\"receipt\", receipt);\r\n        });\r\n      console.log(\"ss\", ss);\r\n    } catch (err) {\r\n      setcatchFlag(true);\r\n      setErrormessage(\"can't perform operation\");\r\n      // alert(err);\r\n    }\r\n  };\r\n\r\n  var errormenu = (\r\n    <div>\r\n     <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n    </div>\r\n  );\r\n\r\n  const [flag, setflag] = useState(false);\r\n  const [flag1, setflag1] = useState(false);\r\n\r\n  const ViewPhone = async (e) => {\r\n    e.preventDefault();\r\n    let method1 = await Contract1.methods.ViewPhone(`${address1}`).call();\r\n    console.log(\"METHOD11111 inside function view Phone\", method1);\r\n    setmethodviewAddress(method1);\r\n    setclassname(\"afterformdiv\");\r\n    setflag1(true);\r\n    if( method1 == 0){\r\n      alert(\"NotFound\")\r\n      setflag1(false);\r\n    setclassname(\"formdiv\");\r\n\r\n    }\r\n  };\r\n  const [flag3, setflag3] = useState(false);\r\n  const [ViewMethodPhone, setViewMethodPhone] = useState(\"\");\r\n  const ViewAddress = async (e) => {\r\n    e.preventDefault();\r\n    let method2 = await Contract1.methods.View_Address(phone).call();\r\n    setViewMethodPhone(method2);\r\n    setclassname(\"afterformdiv\");\r\n    setflag3(true);\r\n    if( method2 == 0){\r\n      alert(\"NotFound\")\r\n      setflag3(false);\r\n      setclassname(\"formdiv\");\r\n    }\r\n  };\r\n\r\n  function close() {\r\n    setflag1(false);\r\n    setclassname(\"formdiv\");\r\n    setflag3(false);\r\n  }\r\n  const [addFlag, setaddFlag] = useState(false);\r\n  const [addphone, setaddphone] = useState(\"\");\r\n  const Add = async (e) => {\r\n    setaddFlag(true);\r\n    let ss = await Contract1.methods\r\n      .Add_Phone(addphone)\r\n      .send({ from: `${account1}` })\r\n      .then(function (receipt) {\r\n        // receipt can also be a new contract instance, when coming from a \"contract.deploy({...}).send()\"\r\n        console.log(\"receipt\", receipt);\r\n      });\r\n  };\r\n\r\n  var menu = (\r\n    <div>\r\n      <table>\r\n        <tr>\r\n          <td>Phone Number</td>\r\n          <td>{methodaAdd[0]}</td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Address</td>\r\n          <td>{methodaAdd[1]}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  var menu1 = (\r\n    <div className={resultDiv}>\r\n      <div class=\"outer\">\r\n        <div class=\"inner\">\r\n          <label>\r\n            {\" \"}\r\n            <button className=\"closebutton\" onClick={(e) => close(e)}>\r\n              {\" \"}\r\n              Close{\" \"}\r\n            </button>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <tr>\r\n          <td>Phone Number</td>\r\n          <td>\r\n            {methodviewAddress}\r\n            {/* address */}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Address</td>\r\n          <td>\r\n            {/* {methodviewAddress} */}\r\n            {address1}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  var menu2 = (\r\n    <div>\r\n      {/* <table>\r\n        <tr>\r\n          <td>Phone Number</td>\r\n          <td>{phone}</td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Address</td>\r\n          <td>{ViewMethodPhone}</td>\r\n        </tr>\r\n      </table> */}\r\n\r\n      <div className={resultDiv}>\r\n        <div class=\"outer\">\r\n          <div class=\"inner\">\r\n            <label>\r\n              {\" \"}\r\n              <button className=\"closebutton\" onClick={(e) => close(e)}>\r\n                {\" \"}\r\n                Close{\" \"}\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <table>\r\n          <tr>\r\n            <td>Phone Number</td>\r\n            <td>\r\n              {phone}\r\n              {/* address */}\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>Address</td>\r\n            <td>\r\n              {/* {methodviewAddress} */}\r\n              {ViewMethodPhone}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    //\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* {catchFlag && errormenu} */}\r\n      <div className=\"header\">\r\n        <div class=\"words word-1\">\r\n          <span>P</span>\r\n          <span>H</span>\r\n          <span>O</span>\r\n          <span>N</span>\r\n          <span>E</span>\r\n          <span>L</span>\r\n          <span>O</span>\r\n          <span>G</span>\r\n\r\n          <div>\r\n            {/* <button  onClick={(e) => Add(e)}>\r\n        Add\r\n    </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* {addFlag && addMenu} */}\r\n      <div className={classname}>\r\n        <form className=\"form\">\r\n          <tr><input\r\n            onChange={(event) => setaddphone(event.target.value)}\r\n            placeholder=\"Enter Phone Number to add new entry\"\r\n          ></input></tr>\r\n           {/* <td>  <input\r\n            onChange={(event) => setname(event.target.value)}\r\n            placeholder=\"Enter Phone Number to add new entry\"\r\n          ></input></td> */}\r\n          <button type=\"button\" onClick={(e) => onSubmit(e)}>\r\n            <h2>\r\n              <span></span>\r\n              <span>Add</span>\r\n            </h2>\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className={classname}>\r\n        <form className=\"form\">\r\n          <input\r\n            onChange={(event) => setaddress(event.target.value)}\r\n            placeholder=\"Enter Address\"\r\n          ></input>\r\n          <button type=\"button\" onClick={(e) => ViewPhone(e)}>\r\n            <h1>\r\n              <span></span>\r\n              <span>Address</span>\r\n            </h1>\r\n          </button>\r\n        </form>\r\n        <form className=\"form\">\r\n          <input\r\n            onChange={(event) => setphone(event.target.value)}\r\n            placeholder=\"Enter Phone\"\r\n          ></input>\r\n          <button type=\"button\" onClick={(e) => ViewAddress(e)}>\r\n            <h1>\r\n              <span></span>\r\n              <span>Phone</span>\r\n            </h1>\r\n          </button>\r\n        </form>\r\n      </div>\r\n      {/* <div className={resultDiv}>{flag1 && menu1}</div>\r\n      <div className={resultDiv}>{flag3 && menu2}</div> */}\r\n      {flag1 && menu1}\r\n      {flag3 && menu2}\r\n      <div className=\"footer\">&copy; sathyakrishna</div>\r\n    </>\r\n  );\r\n};\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Home } from './components/Home';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n     <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}